*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/*
! tailwindcss v3.4.13 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

.neobrutalism {
  z-index: 60;
  border-radius: 0.5rem;
  border-width: 4px;
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity));
  --tw-shadow: 6px 6px 0 0 black;
  --tw-shadow-colored: 6px 6px 0 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

.-top-\[1000px\] {
  top: -1000px;
}

.bottom-0 {
  bottom: 0px;
}

.left-0 {
  left: 0px;
}

.right-0 {
  right: 0px;
}

.top-0 {
  top: 0px;
}

.top-\[200px\] {
  top: 200px;
}

.top-\[2370px\] {
  top: 2370px;
}

.top-\[4050px\] {
  top: 4050px;
}

.top-\[680px\] {
  top: 680px;
}

.z-10 {
  z-index: 10;
}

.z-50 {
  z-index: 50;
}

.z-\[60\] {
  z-index: 60;
}

.col-\[1\] {
  grid-column: 1;
}

.col-\[2\] {
  grid-column: 2;
}

.col-\[3\] {
  grid-column: 3;
}

.row-\[1\] {
  grid-row: 1;
}

.row-\[2\] {
  grid-row: 2;
}

.row-\[3\] {
  grid-row: 3;
}

.row-\[4\] {
  grid-row: 4;
}

.row-\[5\] {
  grid-row: 5;
}

.row-\[6\] {
  grid-row: 6;
}

.row-\[7\] {
  grid-row: 7;
}

.row-\[8\] {
  grid-row: 8;
}

.row-\[9\] {
  grid-row: 9;
}

.row-span-2 {
  grid-row: span 2 / span 2;
}

.block {
  display: block;
}

.flex {
  display: flex;
}

.grid {
  display: grid;
}

.aspect-square {
  aspect-ratio: 1 / 1;
}

.h-1\/2 {
  height: 50%;
}

.h-\[1300px\] {
  height: 1300px;
}

.h-\[1500px\] {
  height: 1500px;
}

.h-\[180px\] {
  height: 180px;
}

.h-\[5000px\] {
  height: 5000px;
}

.h-auto {
  height: auto;
}

.h-full {
  height: 100%;
}

.min-h-screen {
  min-height: 100vh;
}

.w-2\/3 {
  width: 66.666667%;
}

.w-\[600px\] {
  width: 600px;
}

.w-full {
  width: 100%;
}

.max-w-full {
  max-width: 100%;
}

.-rotate-\[90deg\] {
  --tw-rotate: -90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-rotate-\[95deg\] {
  --tw-rotate: -95deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rotate-\[90deg\] {
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rotate-\[95deg\] {
  --tw-rotate: 95deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-default {
  cursor: default;
}

.snap-center {
  scroll-snap-align: center;
}

.snap-always {
  scroll-snap-stop: always;
}

.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.grid-cols-\[2fr_3fr\] {
  grid-template-columns: 2fr 3fr;
}

.grid-cols-\[repeat\(3\2c 1fr\)\] {
  grid-template-columns: repeat(3,1fr);
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-center {
  align-items: center;
}

.justify-start {
  justify-content: flex-start;
}

.justify-center {
  justify-content: center;
}

.gap-10 {
  gap: 2.5rem;
}

.gap-4 {
  gap: 1rem;
}

.gap-6 {
  gap: 1.5rem;
}

.gap-8 {
  gap: 2rem;
}

.gap-\[8rem\] {
  gap: 8rem;
}

.self-center {
  align-self: center;
}

.self-stretch {
  align-self: stretch;
}

.justify-self-center {
  justify-self: center;
}

.justify-self-stretch {
  justify-self: stretch;
}

.overflow-x-hidden {
  overflow-x: hidden;
}

.overflow-x-scroll {
  overflow-x: scroll;
}

.overflow-y-scroll {
  overflow-y: scroll;
}

.rounded-3xl {
  border-radius: 1.5rem;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.border-4 {
  border-width: 4px;
}

.border-black {
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity));
}

.bg-myblue {
  --tw-bg-opacity: 1;
  background-color: rgb(58 133 255 / var(--tw-bg-opacity));
}

.bg-mygreen {
  --tw-bg-opacity: 1;
  background-color: rgb(0 221 179 / var(--tw-bg-opacity));
}

.bg-myorange {
  --tw-bg-opacity: 1;
  background-color: rgb(255 112 2 / var(--tw-bg-opacity));
}

.bg-mypink {
  --tw-bg-opacity: 1;
  background-color: rgb(246 1 149 / var(--tw-bg-opacity));
}

.bg-myviolet {
  --tw-bg-opacity: 1;
  background-color: rgb(123 97 255 / var(--tw-bg-opacity));
}

.bg-myyellow {
  --tw-bg-opacity: 1;
  background-color: rgb(255 191 0 / var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-blue-to-orange {
  background-image: linear-gradient(-175.2deg, #3a85ff 0%, #3a85ff 48.5%, #000000 48.5%, #000000 51.5%, #ff7002 51.5%, #ff7002 100%);;
}

.bg-green-to-blue {
  background-image: linear-gradient(175.2deg, #00ddb3 0%, #00ddb3 48.5%, #000000 48.5%, #000000 51.5%, #3a85ff 51.5%, #3a85ff 100%);;
}

.bg-violet-to-green {
  background-image: linear-gradient(-175.2deg, #7b61ff 0%, #7b61ff 48.5%, #000000 48.5%, #000000 51.5%, #00ddb3 51.5%, #00ddb3 100%);;
}

.bg-yellow-to-violet {
  background-image: linear-gradient(175.2deg, #ffbf00 0%, #ffbf00 48.5%, #000000 48.5%, #000000 51.5%, #7b61ff 51.5%, #7b61ff 100%);;
}

.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}

.p-24 {
  padding: 6rem;
}

.p-3 {
  padding: 0.75rem;
}

.px-24 {
  padding-left: 6rem;
  padding-right: 6rem;
}

.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}

.py-16 {
  padding-top: 4rem;
  padding-bottom: 4rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.pl-\[40\%\] {
  padding-left: 40%;
}

.pr-\[20\%\] {
  padding-right: 20%;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.font-instrument-serif {
  font-family: "Instrument Serif";
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-\[10rem\] {
  font-size: 10rem;
}

.text-\[1rem\] {
  font-size: 1rem;
}

.text-\[2rem\] {
  font-size: 2rem;
}

.text-\[5rem\] {
  font-size: 5rem;
}

.text-\[8rem\] {
  font-size: 8rem;
}

.font-bold {
  font-weight: 700;
}

.font-medium {
  font-weight: 500;
}

.font-semibold {
  font-weight: 600;
}

.tracking-wide {
  letter-spacing: 0.025em;
}

.tracking-wider {
  letter-spacing: 0.05em;
}

.text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.shadow-neobrutalism {
  --tw-shadow: 6px 6px 0 0 black;
  --tw-shadow-colored: 6px 6px 0 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.duration-\[10s\] {
  transition-duration: 10s;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* html {
  font-size: 16px;
  @screen md {
    font-size: 17px;
  }
  @screen lg {
    font-size: 18px;
  }
} */

.diag-lr {
  background: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' preserveAspectRatio='none' viewBox='0 0 100 100'><path d='M1 0 L0 1 L99 100 L100 99' stroke='black' stroke-width='9' /></svg>");
  background-repeat: no-repeat;
  background-position: center center;
  background-size:
    100% 100%,
    auto;
}

.diag-rl {
  background: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' preserveAspectRatio='none' viewBox='0 0 100 100'><path d='M0 99 L99 0 L100 1 L1 100' stroke='black' stroke-width='8' /></svg>");
  background-repeat: no-repeat;
  background-position: center center;
  background-size:
    100% 100%,
    auto;
}

.grid-areas {
  grid-template-areas:
    "a a a c"
    "b b d c"
    "e e e e";
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(3, 1fr);
}

.hover\:neobrutalism-hover:hover:hover {
  --tw-translate-x: -6px;
  --tw-translate-y: -6px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-shadow: 12px 12px 0 0 black;
  --tw-shadow-colored: 12px 12px 0 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.\[\&\>\*\]\:neobrutalism>* {
  z-index: 60;
  border-radius: 0.5rem;
  border-width: 4px;
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity));
  --tw-shadow: 6px 6px 0 0 black;
  --tw-shadow-colored: 6px 6px 0 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}

.\[\&\>\*\]\:neobrutalism-hover>*:hover {
  --tw-translate-x: -6px;
  --tw-translate-y: -6px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-shadow: 12px 12px 0 0 black;
  --tw-shadow-colored: 12px 12px 0 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.\[\&\>\.timeline-text\]\:neobrutalism>.timeline-text {
  z-index: 60;
  border-radius: 0.5rem;
  border-width: 4px;
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity));
  --tw-shadow: 6px 6px 0 0 black;
  --tw-shadow-colored: 6px 6px 0 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}

.hover\:\[\&\>\.timeline-text\]\:neobrutalism-hover>.timeline-text:hover:hover {
  --tw-translate-x: -6px;
  --tw-translate-y: -6px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-shadow: 12px 12px 0 0 black;
  --tw-shadow-colored: 12px 12px 0 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.\[\&\>div\]\:neobrutalism>div {
  z-index: 60;
  border-radius: 0.5rem;
  border-width: 4px;
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity));
  --tw-shadow: 6px 6px 0 0 black;
  --tw-shadow-colored: 6px 6px 0 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}

.hover\:\[\&\>div\]\:neobrutalism-hover>div:hover:hover {
  --tw-translate-x: -6px;
  --tw-translate-y: -6px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-shadow: 12px 12px 0 0 black;
  --tw-shadow-colored: 12px 12px 0 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.hover\:-translate-x-\[6px\]:hover {
  --tw-translate-x: -6px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:-translate-y-\[6px\]:hover {
  --tw-translate-y: -6px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:scale-110:hover {
  --tw-scale-x: 1.1;
  --tw-scale-y: 1.1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:shadow-neobrutalismHover:hover {
  --tw-shadow: 12px 12px 0 0 black;
  --tw-shadow-colored: 12px 12px 0 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

@media (min-width: 640px) {
  .sm\:flex-row {
    flex-direction: row;
  }
}

@media (min-width: 768px) {
  .md\:text-\[20rem\] {
    font-size: 20rem;
  }

  .md\:text-\[2rem\] {
    font-size: 2rem;
  }
}

@media (min-width: 1024px) {
  .lg\:text-\[10rem\] {
    font-size: 10rem;
  }

  .lg\:text-\[30rem\] {
    font-size: 30rem;
  }

  .lg\:text-\[3rem\] {
    font-size: 3rem;
  }

  .lg\:text-\[8rem\] {
    font-size: 8rem;
  }
}

.\[\&\>\*\]\:p-3>* {
  padding: 0.75rem;
}

.\[\&\>\.timeline-diag\]\:h-\[70px\]>.timeline-diag {
  height: 70px;
}

.\[\&\>\.timeline-diag\]\:scale-125>.timeline-diag {
  --tw-scale-x: 1.25;
  --tw-scale-y: 1.25;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.\[\&\>\.timeline-text\]\:bg-myyellow>.timeline-text {
  --tw-bg-opacity: 1;
  background-color: rgb(255 191 0 / var(--tw-bg-opacity));
}

.\[\&\>\.timeline-text\]\:p-4>.timeline-text {
  padding: 1rem;
}

.\[\&\>div\]\:relative>div {
  position: relative;
}

.\[\&\>div\]\:z-\[60\]>div {
  z-index: 60;
}

.\[\&\>div\]\:flex>div {
  display: flex;
}

.\[\&\>div\]\:aspect-square>div {
  aspect-ratio: 1 / 1;
}

.\[\&\>div\]\:h-full>div {
  height: 100%;
}

.\[\&\>div\]\:w-\[220px\]>div {
  width: 220px;
}

.\[\&\>div\]\:w-full>div {
  width: 100%;
}

.\[\&\>div\]\:shrink-0>div {
  flex-shrink: 0;
}

.\[\&\>div\]\:basis-5\/6>div {
  flex-basis: 83.333333%;
}

.\[\&\>div\]\:basis-\[25\%\]>div {
  flex-basis: 25%;
}

.\[\&\>div\]\:cursor-pointer>div {
  cursor: pointer;
}

.\[\&\>div\]\:snap-center>div {
  scroll-snap-align: center;
}

.\[\&\>div\]\:items-center>div {
  align-items: center;
}

.\[\&\>div\]\:justify-center>div {
  justify-content: center;
}

.\[\&\>div\]\:self-center>div {
  align-self: center;
}

.\[\&\>div\]\:self-stretch>div {
  align-self: stretch;
}

.\[\&\>div\]\:justify-self-center>div {
  justify-self: center;
}

.\[\&\>div\]\:overflow-hidden>div {
  overflow: hidden;
}

.\[\&\>div\]\:rounded-3xl>div {
  border-radius: 1.5rem;
}

.\[\&\>div\]\:rounded-full>div {
  border-radius: 9999px;
}

.\[\&\>div\]\:rounded-lg>div {
  border-radius: 0.5rem;
}

.\[\&\>div\]\:border-4>div {
  border-width: 4px;
}

.\[\&\>div\]\:border-black>div {
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity));
}

.\[\&\>div\]\:bg-myorange>div {
  --tw-bg-opacity: 1;
  background-color: rgb(255 112 2 / var(--tw-bg-opacity));
}

.\[\&\>div\]\:bg-white>div {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.\[\&\>div\]\:p-2>div {
  padding: 0.5rem;
}

.\[\&\>div\]\:text-center>div {
  text-align: center;
}

.\[\&\>div\]\:capitalize>div {
  text-transform: capitalize;
}

.\[\&\>div\]\:shadow-neobrutalism>div {
  --tw-shadow: 6px 6px 0 0 black;
  --tw-shadow-colored: 6px 6px 0 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.\[\&\>div\]\:transition-all>div {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.\[\&\>div\]\:duration-300>div {
  transition-duration: 300ms;
}

.before\:\[\&\>div\]\:absolute>div::before {
  content: var(--tw-content);
  position: absolute;
}

.before\:\[\&\>div\]\:left-1\/2>div::before {
  content: var(--tw-content);
  left: 50%;
}

.before\:\[\&\>div\]\:top-\[-100\%\]>div::before {
  content: var(--tw-content);
  top: -100%;
}

.before\:\[\&\>div\]\:hidden>div::before {
  content: var(--tw-content);
  display: none;
}

.before\:\[\&\>div\]\:h-\[200px\]>div::before {
  content: var(--tw-content);
  height: 200px;
}

.before\:\[\&\>div\]\:w-\[200px\]>div::before {
  content: var(--tw-content);
  width: 200px;
}

.before\:\[\&\>div\]\:-translate-x-1\/2>div::before {
  content: var(--tw-content);
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.before\:\[\&\>div\]\:bg-myyellow>div::before {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(255 191 0 / var(--tw-bg-opacity));
}

.hover\:\[\&\>div\]\:-translate-x-\[6px\]>div:hover {
  --tw-translate-x: -6px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:\[\&\>div\]\:-translate-y-\[6px\]>div:hover {
  --tw-translate-y: -6px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:\[\&\>div\]\:scale-\[115\%\]>div:hover {
  --tw-scale-x: 115%;
  --tw-scale-y: 115%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:\[\&\>div\]\:shadow-neobrutalismHover>div:hover {
  --tw-shadow: 12px 12px 0 0 black;
  --tw-shadow-colored: 12px 12px 0 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.hover\:before\:\[\&\>div\]\:block>div:hover::before {
  content: var(--tw-content);
  display: block;
}

@media (min-width: 640px) {
  .sm\:\[\&\>div\]\:w-auto>div {
    width: auto;
  }
}
